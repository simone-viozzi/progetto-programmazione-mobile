@startuml
'https://plantuml.com/class-diagram

class AppDatabase
{


}

class DbRepository {

}

class AttachmentRepository {

}

class ArchiveRepository
{

}


class App {
    AppDatabase
    DbRepository
    AttachmentRepository
    SharedPrefRepository
    GraphsRepository
    ArchiveRepository
    DashboardRepository
    onCreate()
}

AppDatabase ---* App
DbRepository ---* App
AttachmentRepository --* App
ArchiveRepository --* App

AppDatabase <. DbRepository
DbRepository -o ArchiveRepository
AttachmentRepository -o ArchiveRepository


App <. AggregatePageFragment


class AggregatePageFragment
{
    args: AggregatePageFragmentArgs
    viewModel: AggregatePageViewModel
    binding: AggregatePageFragmentBinding
    aggregatePageAdapter: AggregatePageAdapter
    onCreateView()
    onViewCreated()
}

class AggregatePageAdapter
{
    attachmentRepository: AttachmentRepository
    onCreateViewHolder()
    onBindViewHolder()
    getItemViewType()
}

AttachmentRepository ---o AggregatePageAdapter
AggregatePageFragment *-- AggregatePageAdapter

class AggregatePageViewModelFactory
{
    attachmentRepository: AttachmentRepository
    archiveRepository: ArchiveRepository
    aggregate_id: Long
    create()
}


class AggregatePageViewModel
{
    attachmentRepository: AttachmentRepository
    archiveRepository: ArchiveRepository
    aggregate_id : Long
    loadData()
    deleteAggregate()
}

AggregatePageFragment ..> AggregatePageViewModelFactory
AggregatePageViewModelFactory *-- AggregatePageViewModel
AggregatePageFragment o--- AggregatePageViewModel

AttachmentRepository ---o AggregatePageViewModel
ArchiveRepository ---o AggregatePageViewModel

class AggregatePageDiffCallback
{
    areItemsTheSame()
    areContentsTheSame()
}



class AggregatePageViewHolder
{
}


AggregatePageAdapter *-- AggregatePageDiffCallback
AggregatePageAdapter *-- AggregatePageViewHolder

class AggregateViewHolder
{
    bind()
}

class ElementViewHolder
{
    bind()
}

AggregatePageViewHolder <|- AggregateViewHolder
AggregatePageViewHolder <|- ElementViewHolder

class ArchiveDataModel

class Aggregate
{
    id: Int
    aggr_id: Long
    tag: String?
    str_date: String?
    thumbnail: Uri?
    tot_cost: Float
}

class Element{
    id: Int
    name: String?
    num: Int?
    elem_tag: String?
    cost: Double?
}

ArchiveDataModel <|-- Aggregate
ArchiveDataModel <|-- Element

AggregateViewHolder ..> Aggregate
ElementViewHolder ..> Element

AggregatePageViewModel ..> ArchiveDataModel
ArchiveRepository ...> AggregatePageViewHolder

@enduml